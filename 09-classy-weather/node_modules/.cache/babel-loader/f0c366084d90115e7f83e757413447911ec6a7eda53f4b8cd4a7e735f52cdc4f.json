{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport function useWeather(location) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [displayLocation, setDisplayLocation] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  function convertToFlag(countryCode) {\n    const codePoints = countryCode.toUpperCase().split(\"\").map(char => 127397 + char.charCodeAt());\n    return String.fromCodePoint(...codePoints);\n  }\n  useEffect(function () {\n    const controller = new AbortController();\n    async function fetchWeather() {\n      try {\n        setIsLoading(true);\n\n        // call the weather API\n        const geoRes = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${location}`, {\n          signal: controller.signal\n        });\n\n        // get the response\n        const geoData = await geoRes.json();\n        if (!geoData.results) throw new Error(\"Location not found\");\n\n        // update the state\n        const {\n          latitude,\n          longitude,\n          timezone,\n          name,\n          country_code\n        } = geoData.results.at(0);\n        setDisplayLocation(`${name} ${convertToFlag(country_code)}`);\n        const weatherRes = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`);\n        const weatherData = await weatherRes.json();\n        setWeather(weatherData.daily);\n      } catch (err) {\n        console.error(err.message);\n        if (err.name !== \"AbortError\") {\n          setError(err.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n      fetchWeather();\n    }\n  }, [location]);\n  return {\n    displayLocation,\n    weather,\n    isLoading,\n    error\n  };\n}\n_s(useWeather, \"D/HuHR30iVHFSkw5UFNlu/23dWM=\");","map":{"version":3,"names":["useEffect","useState","useWeather","location","_s","isLoading","setIsLoading","error","setError","displayLocation","setDisplayLocation","weather","setWeather","convertToFlag","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","controller","AbortController","fetchWeather","geoRes","fetch","signal","geoData","json","results","Error","latitude","longitude","timezone","name","country_code","at","weatherRes","weatherData","daily","err","console","message"],"sources":["D:/Repos/react-projects/09-classy-weather/src/useWeather.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport function useWeather(location) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [displayLocation, setDisplayLocation] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  function convertToFlag(countryCode) {\r\n    const codePoints = countryCode\r\n      .toUpperCase()\r\n      .split(\"\")\r\n      .map((char) => 127397 + char.charCodeAt());\r\n    return String.fromCodePoint(...codePoints);\r\n  }\r\n\r\n  useEffect(\r\n    function () {\r\n      const controller = new AbortController();\r\n      async function fetchWeather() {\r\n        try {\r\n          setIsLoading(true);\r\n\r\n          // call the weather API\r\n          const geoRes = await fetch(\r\n            `https://geocoding-api.open-meteo.com/v1/search?name=${location}`,\r\n            { signal: controller.signal }\r\n          );\r\n\r\n          // get the response\r\n          const geoData = await geoRes.json();\r\n          if (!geoData.results) throw new Error(\"Location not found\");\r\n\r\n          // update the state\r\n          const { latitude, longitude, timezone, name, country_code } =\r\n            geoData.results.at(0);\r\n\r\n          setDisplayLocation(`${name} ${convertToFlag(country_code)}`);\r\n\r\n          const weatherRes = await fetch(\r\n            `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`\r\n          );\r\n          const weatherData = await weatherRes.json();\r\n\r\n          setWeather(weatherData.daily);\r\n        } catch (err) {\r\n          console.error(err.message);\r\n\r\n          if (err.name !== \"AbortError\") {\r\n            setError(err.message);\r\n          }\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n\r\n        fetchWeather();\r\n      }\r\n    },\r\n    [location]\r\n  );\r\n\r\n  return { displayLocation, weather, isLoading, error };\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,SAASY,aAAaA,CAACC,WAAW,EAAE;IAClC,MAAMC,UAAU,GAAGD,WAAW,CAC3BE,WAAW,EAAE,CACbC,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAEC,IAAI,IAAK,MAAM,GAAGA,IAAI,CAACC,UAAU,EAAE,CAAC;IAC5C,OAAOC,MAAM,CAACC,aAAa,CAAC,GAAGP,UAAU,CAAC;EAC5C;EAEAf,SAAS,CACP,YAAY;IACV,MAAMuB,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxC,eAAeC,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACFnB,YAAY,CAAC,IAAI,CAAC;;QAElB;QACA,MAAMoB,MAAM,GAAG,MAAMC,KAAK,CACvB,uDAAsDxB,QAAS,EAAC,EACjE;UAAEyB,MAAM,EAAEL,UAAU,CAACK;QAAO,CAAC,CAC9B;;QAED;QACA,MAAMC,OAAO,GAAG,MAAMH,MAAM,CAACI,IAAI,EAAE;QACnC,IAAI,CAACD,OAAO,CAACE,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;;QAE3D;QACA,MAAM;UAAEC,QAAQ;UAAEC,SAAS;UAAEC,QAAQ;UAAEC,IAAI;UAAEC;QAAa,CAAC,GACzDR,OAAO,CAACE,OAAO,CAACO,EAAE,CAAC,CAAC,CAAC;QAEvB5B,kBAAkB,CAAE,GAAE0B,IAAK,IAAGvB,aAAa,CAACwB,YAAY,CAAE,EAAC,CAAC;QAE5D,MAAME,UAAU,GAAG,MAAMZ,KAAK,CAC3B,mDAAkDM,QAAS,cAAaC,SAAU,aAAYC,QAAS,0DAAyD,CAClK;QACD,MAAMK,WAAW,GAAG,MAAMD,UAAU,CAACT,IAAI,EAAE;QAE3ClB,UAAU,CAAC4B,WAAW,CAACC,KAAK,CAAC;MAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACpC,KAAK,CAACmC,GAAG,CAACE,OAAO,CAAC;QAE1B,IAAIF,GAAG,CAACN,IAAI,KAAK,YAAY,EAAE;UAC7B5B,QAAQ,CAACkC,GAAG,CAACE,OAAO,CAAC;QACvB;MACF,CAAC,SAAS;QACRtC,YAAY,CAAC,KAAK,CAAC;MACrB;MAEAmB,YAAY,EAAE;IAChB;EACF,CAAC,EACD,CAACtB,QAAQ,CAAC,CACX;EAED,OAAO;IAAEM,eAAe;IAAEE,OAAO;IAAEN,SAAS;IAAEE;EAAM,CAAC;AACvD;AAACH,EAAA,CA5DeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}