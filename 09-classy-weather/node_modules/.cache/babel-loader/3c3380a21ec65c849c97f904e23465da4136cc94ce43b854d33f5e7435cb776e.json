{"ast":null,"code":"import _regeneratorRuntime from\"D:/Repos/react-projects/09-classy-weather/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Repos/react-projects/09-classy-weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"D:/Repos/react-projects/09-classy-weather/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/Repos/react-projects/09-classy-weather/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";export function useWeather(location){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),displayLocation=_useState6[0],setDisplayLocation=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),weather=_useState8[0],setWeather=_useState8[1];function convertToFlag(countryCode){var codePoints=countryCode.toUpperCase().split(\"\").map(function(char){return 127397+char.charCodeAt();});return String.fromCodePoint.apply(String,_toConsumableArray(codePoints));}useEffect(function(){var controller=new AbortController();function fetchWeather(){return _fetchWeather.apply(this,arguments);}function _fetchWeather(){_fetchWeather=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var geoRes,geoData,_geoData$results$at,latitude,longitude,timezone,name,country_code,weatherRes,weatherData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;if(!(location.length<2)){_context.next=3;break;}return _context.abrupt(\"return\");case 3:setIsLoading(true);// call the weather API\n_context.next=6;return fetch(\"https://geocoding-api.open-meteo.com/v1/search?name=\".concat(location),{signal:controller.signal});case 6:geoRes=_context.sent;_context.next=9;return geoRes.json();case 9:geoData=_context.sent;if(geoData.results){_context.next=12;break;}throw new Error(\"Location not found\");case 12:// update the state\n_geoData$results$at=geoData.results.at(0),latitude=_geoData$results$at.latitude,longitude=_geoData$results$at.longitude,timezone=_geoData$results$at.timezone,name=_geoData$results$at.name,country_code=_geoData$results$at.country_code;setDisplayLocation(\"\".concat(name,\" \").concat(convertToFlag(country_code)));_context.next=16;return fetch(\"https://api.open-meteo.com/v1/forecast?latitude=\".concat(latitude,\"&longitude=\").concat(longitude,\"&timezone=\").concat(timezone,\"&daily=weathercode,temperature_2m_max,temperature_2m_min\"));case 16:weatherRes=_context.sent;_context.next=19;return weatherRes.json();case 19:weatherData=_context.sent;setWeather(weatherData.daily);setError(\"\");_context.next=28;break;case 24:_context.prev=24;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);if(_context.t0.name!==\"AbortError\"){setError(_context.t0.message);}case 28:_context.prev=28;setIsLoading(false);return _context.finish(28);case 31:case\"end\":return _context.stop();}},_callee,null,[[0,24,28,31]]);}));return _fetchWeather.apply(this,arguments);}fetchWeather();return function(){return controller.abort();};},[location]);return{displayLocation:displayLocation,weather:weather,isLoading:isLoading,error:error};}","map":{"version":3,"names":["useEffect","useState","useWeather","location","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","displayLocation","setDisplayLocation","_useState7","_useState8","weather","setWeather","convertToFlag","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","apply","_toConsumableArray","controller","AbortController","fetchWeather","_fetchWeather","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","geoRes","geoData","_geoData$results$at","latitude","longitude","timezone","name","country_code","weatherRes","weatherData","wrap","_callee$","_context","prev","next","length","abrupt","fetch","concat","signal","sent","json","results","Error","at","daily","t0","console","message","finish","stop","abort"],"sources":["D:/Repos/react-projects/09-classy-weather/src/useWeather.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport function useWeather(location) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [displayLocation, setDisplayLocation] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  function convertToFlag(countryCode) {\r\n    const codePoints = countryCode\r\n      .toUpperCase()\r\n      .split(\"\")\r\n      .map((char) => 127397 + char.charCodeAt());\r\n    return String.fromCodePoint(...codePoints);\r\n  }\r\n\r\n  useEffect(\r\n    function () {\r\n      const controller = new AbortController();\r\n      async function fetchWeather() {\r\n        try {\r\n          if (location.length < 2) return;\r\n          setIsLoading(true);\r\n\r\n          // call the weather API\r\n          const geoRes = await fetch(\r\n            `https://geocoding-api.open-meteo.com/v1/search?name=${location}`,\r\n            { signal: controller.signal }\r\n          );\r\n\r\n          // get the response\r\n          const geoData = await geoRes.json();\r\n          if (!geoData.results) throw new Error(\"Location not found\");\r\n\r\n          // update the state\r\n          const { latitude, longitude, timezone, name, country_code } =\r\n            geoData.results.at(0);\r\n\r\n          setDisplayLocation(`${name} ${convertToFlag(country_code)}`);\r\n\r\n          const weatherRes = await fetch(\r\n            `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`\r\n          );\r\n          const weatherData = await weatherRes.json();\r\n\r\n          setWeather(weatherData.daily);\r\n          setError(\"\");\r\n        } catch (err) {\r\n          console.error(err.message);\r\n\r\n          if (err.name !== \"AbortError\") {\r\n            setError(err.message);\r\n          }\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n      fetchWeather();\r\n\r\n      return () => controller.abort();\r\n    },\r\n    [location]\r\n  );\r\n\r\n  return { displayLocation, weather, isLoading, error };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}