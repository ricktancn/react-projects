{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\Ultimate-React-Course\\\\07-usepopcorn\\\\src\\\\TextExpander.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextExpander({\n  collapsedNumWords = 20,\n  expandButtonText = \"Show Text\",\n  collapseButtonText = \"Hide Text\",\n  buttonColor = \"black\",\n  className = \"\",\n  children\n}) {\n  _s();\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  function handleToggleCollapsed() {\n    setIsCollapsed(!isCollapsed);\n  }\n  const buttonStyle = {\n    color: buttonColor,\n    cursor: \"pointer\",\n    backgroundColor: \"transparent\",\n    border: \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [children, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      children: expandButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(TextExpander, \"dVskpeWS3kgv81sO7C75cVYWMrM=\");\n_c = TextExpander;\nvar _c;\n$RefreshReg$(_c, \"TextExpander\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextExpander","collapsedNumWords","expandButtonText","collapseButtonText","buttonColor","className","children","_s","isCollapsed","setIsCollapsed","handleToggleCollapsed","buttonStyle","color","cursor","backgroundColor","border","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Repos/Ultimate-React-Course/07-usepopcorn/src/TextExpander.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextExpander({\r\n  collapsedNumWords = 20,\r\n  expandButtonText = \"Show Text\",\r\n  collapseButtonText = \"Hide Text\",\r\n  buttonColor = \"black\",\r\n  className = \"\",\r\n  children,\r\n}) {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n\r\n  function handleToggleCollapsed() {\r\n    setIsCollapsed(!isCollapsed);\r\n  }\r\n\r\n  const buttonStyle = {\r\n    color: buttonColor,\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"transparent\",\r\n    border: \"none\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {children} <button style={buttonStyle}>{expandButtonText}</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAC;EACnCC,iBAAiB,GAAG,EAAE;EACtBC,gBAAgB,GAAG,WAAW;EAC9BC,kBAAkB,GAAG,WAAW;EAChCC,WAAW,GAAG,OAAO;EACrBC,SAAS,GAAG,EAAE;EACdC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpD,SAASa,qBAAqBA,CAAA,EAAG;IAC/BD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B;EAEA,MAAMG,WAAW,GAAG;IAClBC,KAAK,EAAER,WAAW;IAClBS,MAAM,EAAE,SAAS;IACjBC,eAAe,EAAE,aAAa;IAC9BC,MAAM,EAAE;EACV,CAAC;EAED,oBACEhB,OAAA;IAAAO,QAAA,GACGA,QAAQ,EAAC,GAAC,eAAAP,OAAA;MAAQiB,KAAK,EAAEL,WAAY;MAAAL,QAAA,EAAEJ;IAAgB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV;AAACb,EAAA,CA1BuBP,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}