{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\Ultimate-React-Course\\\\07-usepopcorn\\\\src\\\\TextExpander.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextExpander({\n  collapsedNumWords = 10,\n  expandButtonText = \"Show Text\",\n  collapseButtonText = \"Hide Text\",\n  buttonColor = \"darkblue\",\n  className = \"\",\n  expanded = false,\n  children\n}) {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  function handleToggleExpanded() {\n    setIsExpanded(!isExpanded);\n  }\n  const buttonStyle = {\n    color: buttonColor,\n    cursor: \"pointer\",\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    font: \"inherit\",\n    marginLeft: \"6px\"\n  };\n\n  // Split the children into words\n  const words = children.split(\" \");\n  const displayText = !isExpanded ? words.slice(0, collapsedNumWords).join(\" \") + (words.length > collapsedNumWords ? \"...\" : \"\") : children;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", displayText, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: handleToggleExpanded,\n      children: isExpanded ? collapseButtonText : expandButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TextExpander, \"RMFlZSDZtFF+H26TEQMXP7pVvZw=\");\n_c = TextExpander;\nvar _c;\n$RefreshReg$(_c, \"TextExpander\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextExpander","collapsedNumWords","expandButtonText","collapseButtonText","buttonColor","className","expanded","children","_s","isExpanded","setIsExpanded","handleToggleExpanded","buttonStyle","color","cursor","backgroundColor","border","font","marginLeft","words","split","displayText","slice","join","length","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","_c","$RefreshReg$"],"sources":["D:/Repos/Ultimate-React-Course/07-usepopcorn/src/TextExpander.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextExpander({\r\n  collapsedNumWords = 10,\r\n  expandButtonText = \"Show Text\",\r\n  collapseButtonText = \"Hide Text\",\r\n  buttonColor = \"darkblue\",\r\n  className = \"\",\r\n  expanded = false,\r\n  children,\r\n}) {\r\n  const [isExpanded, setIsExpanded] = useState(expanded);\r\n\r\n  function handleToggleExpanded() {\r\n    setIsExpanded(!isExpanded);\r\n  }\r\n\r\n  const buttonStyle = {\r\n    color: buttonColor,\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"transparent\",\r\n    border: \"none\",\r\n    font: \"inherit\",\r\n    marginLeft: \"6px\",\r\n  };\r\n\r\n  // Split the children into words\r\n  const words = children.split(\" \");\r\n  const displayText = !isExpanded\r\n    ? words.slice(0, collapsedNumWords).join(\" \") +\r\n      (words.length > collapsedNumWords ? \"...\" : \"\")\r\n    : children;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <span> {displayText} </span>\r\n      <button style={buttonStyle} onClick={handleToggleExpanded}>\r\n        {isExpanded ? collapseButtonText : expandButtonText}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAC;EACnCC,iBAAiB,GAAG,EAAE;EACtBC,gBAAgB,GAAG,WAAW;EAC9BC,kBAAkB,GAAG,WAAW;EAChCC,WAAW,GAAG,UAAU;EACxBC,SAAS,GAAG,EAAE;EACdC,QAAQ,GAAG,KAAK;EAChBC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACS,QAAQ,CAAC;EAEtD,SAASK,oBAAoBA,CAAA,EAAG;IAC9BD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B;EAEA,MAAMG,WAAW,GAAG;IAClBC,KAAK,EAAET,WAAW;IAClBU,MAAM,EAAE,SAAS;IACjBC,eAAe,EAAE,aAAa;IAC9BC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,SAAS;IACfC,UAAU,EAAE;EACd,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGZ,QAAQ,CAACa,KAAK,CAAC,GAAG,CAAC;EACjC,MAAMC,WAAW,GAAG,CAACZ,UAAU,GAC3BU,KAAK,CAACG,KAAK,CAAC,CAAC,EAAErB,iBAAiB,CAAC,CAACsB,IAAI,CAAC,GAAG,CAAC,IAC1CJ,KAAK,CAACK,MAAM,GAAGvB,iBAAiB,GAAG,KAAK,GAAG,EAAE,CAAC,GAC/CM,QAAQ;EAEZ,oBACER,OAAA;IAAKM,SAAS,EAAEA,SAAU;IAAAE,QAAA,gBACxBR,OAAA;MAAAQ,QAAA,GAAM,GAAC,EAACc,WAAW,EAAC,GAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5B7B,OAAA;MAAQ8B,KAAK,EAAEjB,WAAY;MAACkB,OAAO,EAAEnB,oBAAqB;MAAAJ,QAAA,EACvDE,UAAU,GAAGN,kBAAkB,GAAGD;IAAgB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CAvCuBR,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}