{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\Ultimate-React-Course\\\\07-usepopcorn\\\\src\\\\TextExpander.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextExpander({\n  collapsedNumWords = 20,\n  expandButtonText = \"Show Text\",\n  collapseButtonText = \"Hide Text\",\n  buttonColor = \"black\",\n  className = \"\",\n  children\n}) {\n  _s();\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  function handleToggleCollapsed() {\n    setIsCollapsed(!isCollapsed);\n  }\n  const buttonStyle = {\n    color: buttonColor\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [children, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      style: buttonStyle,\n      onClick: handleToggleCollapsed,\n      children: isCollapsed ? expandButtonText : collapseButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextExpander, \"dVskpeWS3kgv81sO7C75cVYWMrM=\");\n_c = TextExpander;\nvar _c;\n$RefreshReg$(_c, \"TextExpander\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextExpander","collapsedNumWords","expandButtonText","collapseButtonText","buttonColor","className","children","_s","isCollapsed","setIsCollapsed","handleToggleCollapsed","buttonStyle","color","type","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Repos/Ultimate-React-Course/07-usepopcorn/src/TextExpander.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextExpander({\r\n  collapsedNumWords = 20,\r\n  expandButtonText = \"Show Text\",\r\n  collapseButtonText = \"Hide Text\",\r\n  buttonColor = \"black\",\r\n  className = \"\",\r\n  children,\r\n}) {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n\r\n  function handleToggleCollapsed() {\r\n    setIsCollapsed(!isCollapsed);\r\n  }\r\n\r\n  const buttonStyle = { color: buttonColor };\r\n\r\n  return (\r\n    <>\r\n      {children}\r\n      <input type=\"button\" style={buttonStyle} onClick={handleToggleCollapsed}>\r\n        {isCollapsed ? expandButtonText : collapseButtonText}\r\n      </input>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,YAAYA,CAAC;EACnCC,iBAAiB,GAAG,EAAE;EACtBC,gBAAgB,GAAG,WAAW;EAC9BC,kBAAkB,GAAG,WAAW;EAChCC,WAAW,GAAG,OAAO;EACrBC,SAAS,GAAG,EAAE;EACdC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpD,SAASe,qBAAqBA,CAAA,EAAG;IAC/BD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B;EAEA,MAAMG,WAAW,GAAG;IAAEC,KAAK,EAAER;EAAY,CAAC;EAE1C,oBACEP,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACGA,QAAQ,eACTT,OAAA;MAAOgB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAEH,WAAY;MAACI,OAAO,EAAEL,qBAAsB;MAAAJ,QAAA,EACrEE,WAAW,GAAGN,gBAAgB,GAAGC;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA,eACR,CAAC;AAEP;AAACZ,EAAA,CAxBuBP,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}