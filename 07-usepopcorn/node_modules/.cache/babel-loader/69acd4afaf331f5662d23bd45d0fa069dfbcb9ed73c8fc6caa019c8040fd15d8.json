{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\react-projects\\\\07-usepopcorn\\\\src\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { KEY, Loader } from \"./App\";\nimport StarRating from \"./StarRating\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MovieDetails({\n  selectedId,\n  onCloseMovie,\n  onAddWatched\n}) {\n  _s();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(\"\");\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating\n    };\n    onAddWatched(newWatchedMovie);\n    onCloseMovie();\n  }\n  useEffect(() => {\n    async function getMovieDetails() {\n      setIsLoading(true);\n      const res = await fetch(`http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`);\n      const data = await res.json();\n      setMovie(data);\n      setIsLoading(false);\n    }\n    getMovieDetails();\n  }, [selectedId]);\n\n  //find if selectedId is in watched list\n  watchedMovie = watched.find(movie => movie.imdbID === selectedId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: onCloseMovie,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${title} movie`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [released, \" \\u2022 \", runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: imdbRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: [/*#__PURE__*/_jsxDEV(StarRating, {\n            maxRating: 10,\n            size: 24,\n            onSetRating: setUserRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), userRating > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-add\",\n            onClick: handleAdd,\n            children: \"+ Add to list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"plot\",\n          children: plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"actors\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Starring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), \" \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"director\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Directed by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), \" \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"+DMl9ppEZvJyX+xlp26weQaf/ck=\");\n_c = MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["useState","useEffect","KEY","Loader","StarRating","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetails","selectedId","onCloseMovie","onAddWatched","_s","movie","setMovie","isLoading","setIsLoading","userRating","setUserRating","Title","title","Year","year","Poster","poster","Runtime","runtime","imdbRating","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","handleAdd","newWatchedMovie","imdbID","Number","split","at","getMovieDetails","res","fetch","data","json","watchedMovie","watched","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","maxRating","size","onSetRating","_c","$RefreshReg$"],"sources":["D:/Repos/react-projects/07-usepopcorn/src/MovieDetails.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { KEY, Loader } from \"./App\";\r\nimport StarRating from \"./StarRating\";\r\n\r\nexport function MovieDetails({ selectedId, onCloseMovie, onAddWatched }) {\r\n  const [movie, setMovie] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [userRating, setUserRating] = useState(\"\");\r\n\r\n  const {\r\n    Title: title,\r\n    Year: year,\r\n    Poster: poster,\r\n    Runtime: runtime,\r\n    imdbRating,\r\n    Plot: plot,\r\n    Released: released,\r\n    Actors: actors,\r\n    Director: director,\r\n    Genre: genre,\r\n  } = movie;\r\n\r\n  function handleAdd() {\r\n    const newWatchedMovie = {\r\n      imdbID: selectedId,\r\n      title,\r\n      year,\r\n      poster,\r\n      imdbRating: Number(imdbRating),\r\n      runtime: Number(runtime.split(\" \").at(0)),\r\n      userRating,\r\n    };\r\n    onAddWatched(newWatchedMovie);\r\n    onCloseMovie();\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getMovieDetails() {\r\n      setIsLoading(true);\r\n      const res = await fetch(\r\n        `http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`\r\n      );\r\n      const data = await res.json();\r\n\r\n      setMovie(data);\r\n      setIsLoading(false);\r\n    }\r\n    getMovieDetails();\r\n  }, [selectedId]);\r\n\r\n  //find if selectedId is in watched list\r\n  watchedMovie = watched.find((movie) => movie.imdbID === selectedId);\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <header>\r\n            <button className=\"btn-back\" onClick={onCloseMovie}>\r\n              &larr;\r\n            </button>\r\n            <img src={poster} alt={`Poster of ${title} movie`} />\r\n            <div className=\"details-overview\">\r\n              <h2>{title}</h2>\r\n              <p>\r\n                {released} &bull; {runtime}\r\n              </p>\r\n              <p>{genre}</p>\r\n              <p>\r\n                <span>⭐️</span>\r\n                <span>{imdbRating}</span>\r\n              </p>\r\n            </div>\r\n          </header>\r\n          <section>\r\n            <div className=\"rating\">\r\n              <StarRating\r\n                maxRating={10}\r\n                size={24}\r\n                onSetRating={setUserRating}\r\n              />\r\n              {userRating > 0 && (\r\n                <button className=\"btn-add\" onClick={handleAdd}>\r\n                  + Add to list\r\n                </button>\r\n              )}\r\n            </div>\r\n            <p className=\"plot\">{plot}</p>\r\n            <p className=\"actors\">\r\n              <strong>Starring:</strong> {actors}\r\n            </p>\r\n            <p className=\"director\">\r\n              <strong>Directed by:</strong> {director}\r\n            </p>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}